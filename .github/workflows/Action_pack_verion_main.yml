name: Gitflow-R Action Pack Version- Main
run-name: Activated by ${{ github.actor }}

on:
  workflow_call:
    inputs:
    
      image_to_use:
        required: true
        type: string
        
      test:
        required: false
        default: 'No'
        type: string
      
      artifact_rid_production:
        required: true
        type: string
      
      artifact_rid_development:
        required: true
        type: string

      package_name:
        required: true
        type: string

      r_version:
        required: true
        type: string

    secrets:
      NIDAP_TOKEN_PRODUCTION:
        required: false
      NIDAP_TOKEN_DEVELOPMENT:
        required: false


jobs: 
  Checks:
    runs-on: ubuntu-latest
    outputs:
      release_match: ${{ steps.checks.outputs.release_match }}
      pull_check: ${{ steps.checks.outputs.pull_check }}
      main_match: ${{ steps.checks.outputs.main_match }}
      merged_check: ${{ steps.checks.outputs.merged_check }}
      cd_nidap: ${{ steps.checks.outputs.cd_nidap }}
    steps:
      - name: Show Job Info
        id: checks
        run: |
          # This is the hub action to decide which action to use
          # After the workflow is being called
          # Print information about the current event
          git --version
          echo "Image to use: ${{ inputs.image_to_use }}"
          echo "Event Branch:  ${{ github.head_ref }}"
          echo "Event Name: ${{ github.event_name }}"
          echo "Pull Merged: ${{ github.event.pull_request.merged }}"
          echo "Pull Request Branch:  ${{ github.base_ref }}"
          
          # Export pass session information to next step. 
          export pull_branch="${{ github.base_ref }}"
          export pull_merged="${{ github.event.pull_request.merged }}"
          export event_name="${{ github.event_name }}"
          export event_branch="${{ github.head_ref }}"
          
          # Determin event triggers, in current version
          # We checkt for pull request status and push event.
          # We also check for dev, release, and main branch.

          if [[ ${{ github.event_name }} == pull_request ]]; then
              echo "pull_check=Yes" >> "$GITHUB_OUTPUT"
              echo "pull_check=Yes"
            else
              echo "pull_check=No" >> "$GITHUB_OUTPUT"
          fi
          
          if [[ -z "$pull_branch" ]]; then
            echo "release_match=No" >> "$GITHUB_OUTPUT"
            echo "main_match=No" >> "$GITHUB_OUTPUT"
          else
            if [[ $pull_branch == release* ]]; then
                echo "release_match=Yes" >> "$GITHUB_OUTPUT"
                echo "release_match=Yes"
            fi
            
            if [[ $pull_branch ==  dev ]]; then
                echo "dev_match=Yes" >> "$GITHUB_OUTPUT"
                echo "dev_match=Yes"
            fi

            if [[ $pull_branch == main ]]; then
              echo "main_match=Yes" >> "$GITHUB_OUTPUT"
              echo "main_match=Yes"
            fi

            if [[ $pull_branch == master ]]; then
              echo "main_match=Yes" >> "$GITHUB_OUTPUT"
              echo "main_match=Yes"
            fi
          fi
          
          if [[ -z "$pull_merged" ]]; then
            echo "merged_check=No" >> "$GITHUB_OUTPUT"
          else
            if [[ $pull_merged == true ]]; then
                echo "merged_check=Yes" >> "$GITHUB_OUTPUT"
                echo "merged_check=Yes"
            fi
          fi
          
  Gitflow_R_Test:
    needs: [Checks]
    if: ${{ inputs.test == 'Yes' }}
    uses: fnlcr-bids-sdsi/gitflow-R/.github/workflows/test_actions.yml@master

  Push_Check:
    needs: [Checks]
    if: ${{ github.event_name == 'push' &&
            inputs.test == 'No' &&
            github.ref_name != 'Conda_Package' }}
    uses: fnlcr-bids-sdsi/gitflow-R/.github/workflows/Check_On_Commit.yml@master
    with:
      image_to_use: "${{ inputs.image_to_use }}"
      action_branch: "master"
  
  Release_Merge_Check:
    needs: [Checks]
    if: ${{ needs.Checks.outputs.pull_check == 'Yes' &&
            needs.Checks.outputs.merged_check != 'Yes' &&
            needs.Checks.outputs.release_match == 'Yes' &&
            inputs.test == 'No' }}
    uses: fnlcr-bids-sdsi/gitflow-R/.github/workflows/Check_On_Merge_to_Release.yml@master
    with:
      image_to_use: "${{ inputs.image_to_use }}"
      action_branch: "master"

  Release_CD:
    needs: [Checks]
    if: ${{ needs.Checks.outputs.pull_check == 'Yes' && 
            needs.Checks.outputs.merged_check == 'Yes' && 
            needs.Checks.outputs.release_match == 'Yes' && 
            inputs.test == 'No' }}
    uses: fnlcr-dmap/gitflow-R/.github/workflows/post_merged_to_release.yml@master
    with:
      image_to_use: "${{ inputs.image_to_use }}"
      artifact_rid: "${{ inputs.artifact_rid_development }}"
      package_name: "${{ inputs.package_name }}"
      r_version: "${{ inputs.r_version }}"
    secrets:
      NIDAP_TOKEN: ${{ secrets.NIDAP_TOKEN_DEVELOPMENT }}
  
  Main_Merge_Check:
    needs: [Checks]
    if: ${{ needs.Checks.outputs.pull_check == 'Yes' &&
            needs.Checks.outputs.merged_check != 'Yes' &&
            needs.Checks.outputs.main_match == 'Yes' &&
            inputs.test == 'No' }}
    uses: fnlcr-bids-sdsi/gitflow-R/.github/workflows/Check_On_Merge_to_Main.yml@master
    with:
      image_to_use: "${{ inputs.image_to_use }}"
      action_branch: "master"

  CD_Main:
    needs: [Checks]
    if: ${{ needs.Checks.outputs.pull_check == 'Yes' &&
            needs.Checks.outputs.merged_check == 'Yes' &&
            needs.Checks.outputs.main_match == 'Yes' &&
            inputs.test == 'No' }}
    uses: fnlcr-bids-sdsi/gitflow-R/.github/workflows/Append_File_On_Merged_to_Main.yml@master
    with:
      image_to_use: "${{ inputs.image_to_use }}"
      artifact_rid: "${{ inputs.artifact_rid_development }}"
      package_name: "${{ inputs.package_name }}"
      r_version: "${{ inputs.r_version }}"
    secrets:
      NIDAP_TOKEN: ${{ secrets.NIDAP_TOKEN_PRODUCTION }}
name: Push Check on Changed Scripts
run-name: Action on push by ${{ github.actor }} 

on:
  workflow_call:
    inputs:
    
      image_to_use:
        required: true
        type: string
      
jobs:
  Check_on_Changed_Scripts:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image_to_use }}
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
         
    steps:
      - id: Show Computing Environment
        run: |
          echo "Checking in ${{ inputs.image_to_use }}"
          conda activate scworkflow
          conda list

      - uses: actions/checkout@v3
        with:
           token: ${{secrets.GITHUB_TOKEN}}
           ref: ${{ github.ref_name }}
       
      - id: Lint_check
        name: Use lintr to check code
        run: |
          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          echo "$current_wd"
          
          pylint --version

          git --version
                   
          git config --global --add safe.directory $current_wd
          
          git clone https://github.com/fnlcr-bids-sdsi/gitflow-R.git
          
          cd gitflow-R
          git checkout single-cell-analysis
          cd $current_wd
          
          bash $current_wd/gitflow-R/Lint_on_Commit.sh "$current_wd" "${{ github.event.before }}"
           
      - id: Unit_Test
        name: Unit test for changed scripts
        run: |
          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          echo "$current_wd"
          
          pytest --version

          bash $current_wd/gitflow-R/Check_on_Commit.sh "$current_wd" "${{ github.event.before }}"          
          
      - name: Undo Push
        if: ${{ failure() }}
        run: |
          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          echo "$current_wd"
          
          export MY_GIT_TOKEN=${{secrets.GITHUB_TOKEN}}
          export MY_GIT_USERNAME=${{ github.actor }}
          export MY_GIT_EMAIL=${{ github.event.pusher.email }}
          
          git config --global user.name "$MY_GIT_USERNAME"
          git config --global user.email "$MY_GIT_EMAIL"
          git config --global url."https://api:$MY_GIT_TOKEN@github.com/".insteadOf "https://github.com/"
          git config --global url."https://ssh:$MY_GIT_TOKEN@github.com/".insteadOf "ssh://git@github.com/"
          git config --global url."https://git:$MY_GIT_TOKEN@github.com/".insteadOf "git@github.com:"
          
          git clone https://github.com/${GITHUB_REPOSITORY}.git
          
          cd ${GITHUB_REPOSITORY#*/}
          
          git checkout ${{ github.ref_name }}
          
          git reset --hard ${{ github.event.before }}
          
          git push -f origin ${{ github.ref_name }}

name: Adding documentation and update GitHub Page
run-name: Action on Merged main by ${{ github.actor }} 

on:
  workflow_call:
    inputs:
    
      image_to_use:
        required: true
        type: string
      
jobs:
  Adding_documentation_files_and_publish_page:
    runs-on: ubuntu-latest
    container:
      image: ${{ inputs.image_to_use }}
      credentials:
         username: ${{ github.actor }}
         password: ${{ secrets.GITHUB_TOKEN }}
         
    steps:
      - name: Show Computing Environment
        id: Show_Computing_Environment
        run: |
          bash
          . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          conda activate scworkflow
          echo "Checking in ${{ inputs.image_to_use }}"
          conda activate scworkflow
          conda list
          
      - run: echo "Checking in ${{ inputs.image_to_use }}"
      - uses: actions/checkout@v3
        with:
          token: ${{secrets.GITHUB_TOKEN}}

      - name: Setting Environment
        run: |
          bash
          . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          conda activate scworkflow

          pip --version

          pip install sphinx
          
          pip install sphinx_rtd_theme

          pip install python-semantic-release

      - name: Generating Documentations
        id: prepare-push 
        if: ${{ success() }}
        run: |
          bash
          . /root/miniconda3/etc/profile.d/conda.sh && conda init bash
          conda activate scworkflow

          export current_wd="/__w/${GITHUB_REPOSITORY#*/}/${GITHUB_REPOSITORY#*/}"
          cd $current_wd
          
          export MY_GIT_TOKEN=${{ secrets.GITHUB_TOKEN }}
          export MY_GIT_USERNAME=${{ github.actor }}
          export MY_GIT_EMAIL=${{ github.event.pusher.email }}
          
          git config --global user.name "$MY_GIT_USERNAME"
          git config --global user.email "$MY_GIT_EMAIL"
          git config --global url."https://api:$MY_GIT_TOKEN@github.com/".insteadOf "https://github.com/"
          git config --global url."https://ssh:$MY_GIT_TOKEN@github.com/".insteadOf "ssh://git@github.com/"
          git config --global url."https://git:$MY_GIT_TOKEN@github.com/".insteadOf "git@github.com:"
          
          git config --global --add safe.directory "$current_wd"

          git clone https://github.com/fnlcr-bids-sdsi/gitflow-R.git
          
          cd gitflow-R

          git checkout single-cell-analysis

          cd $current_wd
          
          git clone https://github.com/${GITHUB_REPOSITORY}.git
          
          cd ${GITHUB_REPOSITORY#*/}

          echo "############################################"
          echo "######### Updating Documentations ##########"
          echo "############################################"
          
          line="[tool.semantic_release]"
          version_variable="version_variable = \"pyproject.toml:version\""

          if grep -Fxq "$line" pyproject.toml && grep -Fxq "$version_variable" pyproject.toml; then
              echo "Semantic release setting already exists in pyproject.toml"
          else
              echo "" >> pyproject.toml
              echo "$line" >> pyproject.toml
              echo "$version_variable" >> pyproject.toml
              echo "" >> pyproject.toml
              echo "Added semantic release setting to pyproject.toml"
          fi

          cat pyproject.toml

          semantic-release version

          echo $(git commit -a -m "docs(version): Automatic Version Bumping") > commit_log.log
          cat commit_log.log
          export nothing_for_commit="$(grep -Po "nothing to commit" commit_log.log)"

          if [ -n "${nothing_for_commit}" ]; then
            echo "Commit check failed with message: $nothing_for_commit" 
          else
            echo "Updating main now."
            git push -f origin main
          fi

          bash ../gitflow-R/Python_Documentation.sh
          
          git add --all

          echo $(git commit -a -m "Adding auto-generated files") > commit_log.log
          
          cat commit_log.log
          
          # Processing github_page branch      
          
          echo "NProcessing github_page branch"
          
          if git rev-parse --verify github_page >/dev/null 2>&1; then
            echo "github_page already exists!"
          else
            git checkout -b github_page
            echo "github_page created!"
          fi
          
          git checkout github_page

          git checkout main -- docs

          touch docs/.nojekyll
          
          git add docs/.nojekyll          

          echo "For GitHub Page Deployment" > docs/.nojekyll

          git rm -r --ignore-unmatch $(git ls-files | grep -v '^docs/')

          echo $(git commit -a -m "Updating GitHub Page") > commit_log.log
          
          cat commit_log.log
          
          export nothing_for_commit="$(grep -Po "nothing to commit" commit_log.log)"
          
          if [ -n "${nothing_for_commit}" ]; then
            echo "Commit check failed with message: $nothing_for_commit" 
          else
            echo "Pushing changes now."
            git push -f origin github_page
          fi
          
          echo "Process completed."
    